<!DOCTYPE html>
<html lang="uk">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <title>Змійка</title>
    <style>
        body {
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            background: #f0f0f0;
            font-family: Arial, sans-serif;
            touch-action: manipulation;
            overflow: hidden;
        }
        #game-container {
            position: relative;
        }
        #game-canvas {
            background: black;
            display: block;
            border: 2px solid #333;
        }
        #score {
            position: absolute;
            top: 10px;
            left: 10px;
            color: white;
            font-size: 20px;
        }
        #controls {
            position: absolute;
            bottom: 20px;
            width: 100%;
            display: flex;
            justify-content: center;
            gap: 10px;
        }
        .control-btn {
            width: 60px;
            height: 60px;
            background: rgba(255, 255, 255, 0.3);
            border: 2px solid #333;
            border-radius: 50%;
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 24px;
            user-select: none;
        }
        #game-over {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            color: white;
            font-size: 36px;
            text-align: center;
            display: none;
        }
        #restart-btn {
            margin-top: 20px;
            padding: 10px 20px;
            background: #4CAF50;
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 18px;
            cursor: pointer;
        }
    </style>
</head>
<body>
    <div id="game-container">
        <canvas id="game-canvas" width="300" height="300"></canvas>
        <div id="score">Рахунок: 0</div>
        <div id="game-over">
            Гра закінчена!<br>
            <span id="final-score">Рахунок: 0</span><br>
            <button id="restart-btn">Грати знову</button>
        </div>
        <div id="controls">
            <div class="control-btn" id="up-btn">↑</div>
            <div class="control-btn" id="left-btn">←</div>
            <div class="control-btn" id="down-btn">↓</div>
            <div class="control-btn" id="right-btn">→</div>
        </div>
    </div>

    <script>
        // Налаштування гри
        const canvas = document.getElementById('game-canvas');
        const ctx = canvas.getContext('2d');
        const scoreElement = document.getElementById('score');
        const gameOverElement = document.getElementById('game-over');
        const finalScoreElement = document.getElementById('final-score');
        const restartBtn = document.getElementById('restart-btn');
        
        // Адаптивний розмір canvas
        function resizeCanvas() {
            const size = Math.min(window.innerWidth - 40, window.innerHeight - 200, 400);
            canvas.width = size;
            canvas.height = size;
        }
        resizeCanvas();
        window.addEventListener('resize', resizeCanvas);

        // Параметри гри
        const gridSize = 20;
        let snake = [
            {x: Math.floor(canvas.width / 2 / gridSize) * gridSize, 
             y: Math.floor(canvas.height / 2 / gridSize) * gridSize}
        ];
        let food = generateFood();
        let direction = 'RIGHT';
        let nextDirection = 'RIGHT';
        let score = 0;
        let gameSpeed = 150;
        let gameInterval;
        let isGameOver = false;

        // Генерація їжі
        function generateFood() {
            return {
                x: Math.floor(Math.random() * (canvas.width / gridSize)) * gridSize,
                y: Math.floor(Math.random() * (canvas.height / gridSize)) * gridSize
            };
        }

        // Малювання гри
        function draw() {
            // Очищення поля
            ctx.fillStyle = 'black';
            ctx.fillRect(0, 0, canvas.width, canvas.height);

            // Малювання змійки
            ctx.fillStyle = 'lime';
            snake.forEach(segment => {
                ctx.fillRect(segment.x, segment.y, gridSize-1, gridSize-1);
            });

            // Малювання їжі
            ctx.fillStyle = 'red';
            ctx.beginPath();
            ctx.arc(food.x + gridSize/2, food.y + gridSize/2, gridSize/2, 0, Math.PI * 2);
            ctx.fill();
        }

        // Оновлення гри
        function update() {
            if (isGameOver) return;

            // Оновлення напрямку
            direction = nextDirection;

            // Рух голови
            const head = {x: snake[0].x, y: snake[0].y};
            
            switch(direction) {
                case 'UP': head.y -= gridSize; break;
                case 'DOWN': head.y += gridSize; break;
                case 'LEFT': head.x -= gridSize; break;
                case 'RIGHT': head.x += gridSize; break;
            }

            // Перевірка на зіткнення зі стінами
            if (head.x < 0 || head.x >= canvas.width || 
                head.y < 0 || head.y >= canvas.height) {
                endGame();
                return;
            }

            // Перевірка на зіткнення зі собою
            if (snake.some(segment => segment.x === head.x && segment.y === head.y)) {
                endGame();
                return;
            }

            // Додавання нової голови
            snake.unshift(head);

            // Перевірка на з'їдання їжі
            if (head.x === food.x && head.y === food.y) {
                score += 10;
                scoreElement.textContent = `Рахунок: ${score}`;
                food = generateFood();
                gameSpeed = Math.max(50, gameSpeed - 5);
                clearInterval(gameInterval);
                gameInterval = setInterval(gameLoop, gameSpeed);
            } else {
                snake.pop(); // Видалення хвоста
            }
        }

        // Керування
        function changeDirection(newDirection) {
            // Заборона руху в протилежному напрямку
            if ((direction === 'UP' && newDirection !== 'DOWN') ||
                (direction === 'DOWN' && newDirection !== 'UP') ||
                (direction === 'LEFT' && newDirection !== 'RIGHT') ||
                (direction === 'RIGHT' && newDirection !== 'LEFT')) {
                nextDirection = newDirection;
            }
        }

        // Кінець гри
        function endGame() {
            isGameOver = true;
            clearInterval(gameInterval);
            finalScoreElement.textContent = `Рахунок: ${score}`;
            gameOverElement.style.display = 'block';
        }

        // Рестарт гри
        function restartGame() {
            snake = [
                {x: Math.floor(canvas.width / 2 / gridSize) * gridSize, 
                 y: Math.floor(canvas.height / 2 / gridSize) * gridSize}
            ];
            food = generateFood();
            direction = 'RIGHT';
            nextDirection = 'RIGHT';
            score = 0;
            scoreElement.textContent = `Рахунок: ${score}`;
            gameSpeed = 150;
            isGameOver = false;
            gameOverElement.style.display = 'none';
            clearInterval(gameInterval);
            gameInterval = setInterval(gameLoop, gameSpeed);
        }

        // Головний цикл гри
        function gameLoop() {
            update();
            draw();
        }

        // Початковий запуск гри
        gameInterval = setInterval(gameLoop, gameSpeed);

        // Обробники подій
        document.addEventListener('keydown', (e) => {
            switch(e.key) {
                case 'ArrowUp': changeDirection('UP'); break;
                case 'ArrowDown': changeDirection('DOWN'); break;
                case 'ArrowLeft': changeDirection('LEFT'); break;
                case 'ArrowRight': changeDirection('RIGHT'); break;
            }
        });

        // Сенсорне керування
        document.getElementById('up-btn').addEventListener('click', () => changeDirection('UP'));
        document.getElementById('down-btn').addEventListener('click', () => changeDirection('DOWN'));
        document.getElementById('left-btn').addEventListener('click', () => changeDirection('LEFT'));
        document.getElementById('right-btn').addEventListener('click', () => changeDirection('RIGHT'));

        // Рестарт гри
        restartBtn.addEventListener('click', restartGame);

        // Свайпи для мобільних пристроїв
        let touchStartX = 0;
        let touchStartY = 0;
        document.addEventListener('touchstart', (e) => {
            touchStartX = e.touches[0].clientX;
            touchStartY = e.touches[0].clientY;
        });
        document.addEventListener('touchend', (e) => {
            const touchEndX = e.changedTouches[0].clientX;
            const touchEndY = e.changedTouches[0].clientY;
            const dx = touchEndX - touchStartX;
            const dy = touchEndY - touchStartY;

            if (Math.abs(dx) > Math.abs(dy)) {
                if (dx > 0) changeDirection('RIGHT');
                else changeDirection('LEFT');
            } else {
                if (dy > 0) changeDirection('DOWN');
                else changeDirection('UP');
            }
        });
    </script>
</body>
</html>
